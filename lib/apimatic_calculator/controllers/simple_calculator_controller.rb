# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ApimaticCalculator
  # SimpleCalculatorController
  class SimpleCalculatorController < BaseController
    @instance = SimpleCalculatorController.new

    class << self
      attr_accessor :instance
    end

    def instance
      self.class.instance
    end

    # Calculates the expression using the specified operation.
    # @param [OperationTypeEnum] operation Required parameter: The operator to
    # apply on the variables
    # @param [Float] x Required parameter: The LHS value
    # @param [Float] y Required parameter: The RHS value
    # @return Float response from the API call
    def get_calculate(options = {})
      # Prepare query url.
      _query_builder = Configuration.base_uri.dup
      _query_builder << '/{operation}'
      _query_builder = APIHelper.append_url_with_template_parameters(
        _query_builder,
        'operation' => options['operation']
      )
      _query_builder = APIHelper.append_url_with_query_parameters(
        _query_builder,
        'x' => options['x'],
        'y' => options['y'],
        array_serialization: Configuration.array_serialization
      )
      _query_url = APIHelper.clean_url _query_builder

      # Prepare and execute HttpRequest.
      _request = @http_client.get(
        _query_url
      )
      _context = execute_request(_request)
      validate_response(_context)

      # Return appropriate response type.
      _context.response.raw_body.to_f
    end
  end
end
